name: Django App CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
      name: Test
      runs-on: ubuntu-latest
      steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and start docker images
        run: |
          DOCKER_BUILDKIT=1  docker-compose build --no-cache
          sudo chmod +x start_services.sh
          ./start_services.sh
        shell: bash


  # build:
  #   needs: test
  #   name: Build
  #   runs-on: ubuntu-latest
  #   strategy:
  #     max-parallel: 4
  #     matrix:
  #       python-version: [3.8, 3.9, 3.12.0]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Build and push Docker image
  #       env:
  #         DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #         DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  #         IMAGE_NAME: djangocon_app
  #         IMAGE_TAG: latest
  #       run: |
  #         echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
  #         docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .
  #         docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG



  deploy:
    # needs: build
    name: Deploy to Elasticbeanstalk
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Get Timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: us-east-1
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      - run: pip install -r requirements.txt
        working-directory: ./infrastructure-aws
      - uses: pulumi/actions@v3
        with:
          command: preview
          stack-name: sja/infrastructure-aws/dev 
          work-dir: ./infrastructure-aws
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Run String Replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Generate Deployment Package
        run: zip -r deploy.zip * 


      - name: Deploy to Test Env
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: django-app 
          environment_name: dev-env-8178e24
          version_label: "harverstalert-app-${{ steps.format-time.outputs.replaced }}"
          region: us-east-1
          deployment_package: deploy.zip